---
version: '3'

dotenv:
  - ".env"

tasks:
  default:
    silent: true
    cmds:
      - task --list

  check:
    desc: check lint/fmt source code
    cmds:
      - task: check:yaml
      - task: check:jsonnet

  clean:
    desc: remove build artifacts
    cmds:
      - rm -rf ./build

  build:
    desc: build the images and the vagrant boxes
    cmds:
      - task: build:image
        vars:
          STAGE: base
      - task: build:image
        vars:
          PREV_STAGE: base
          STAGE: vagrant

  check:yaml: "yamllint ."

  check:jsonnet:
    cmds:
      - >-
        tofmt=();
        for f in ./{common,stage-*}/*{,/*}.{j,lib}sonnet; do
        jsonnetfmt --test "${f}" 2>/dev/null
        ||{ [ $? -eq 2 ] && tofmt+=("jsonnetfmt -i ${f}"); }
        done;
        [ ! ${#tofmt[@]} -eq 0 ]
        && echo 'Format these files:' 1>&2
        && printf '%s\n' "${tofmt[@]}" 1>&2
        && exit 1;
        exit 0

  clean:pkr-conf:
    summary: |
      Removes generated packer configs.
      Requires to set the STAGE variable, e.g.:

      task clean:pkr-conf STAGE=base
    label: "clean:pkr-conf STAGE={{.STAGE}}"
    cmds:
      - rm -rf ./build/pkr-conf/{{.STAGE}}.pkr.json

  clean:image:
    summary: |
      Removes built images of a specific stage
      Requires to set the STAGE variable, e.g.:

      task clean:image STAGE=base
    label: "clean:image STAGE={{.STAGE}}"
    cmds:
      - rm -rf ./build/dist/{{.STAGE}}

  build:pkr-conf:
    summary: |
      Builds a specific stage packer config assuming the dependencies are
      present.
      Requires to set the STAGE variable, e.g.:

      task build:pkr-conf STAGE=base
    label: "build:pkr-conf STAGE={{.STAGE}}"
    cmds:
      - task: clean:pkr-conf
        vars: {STAGE: "{{.STAGE}}"}
      - >-
        jpaths=();
        for i in ./{common,stage-{{.STAGE}}}/{,*/}; do
        jpaths+=("--jpath" "${i}"); done;
        jsonnet --create-output-dirs
        --output-file "./build/pkr-conf/{{.STAGE}}.pkr.json"
        "${jpaths[@]}"
        "./stage-{{.STAGE}}/main.pkr.jsonnet"
    sources:
      - "./stage-{{.STAGE}}/{,*/}*"
      - "./common/{,*/}*"
    generates:
      - "./build/pkr-conf/{{.STAGE}}.pkr.json"

  build:image:
    summary: |
      Builds a specific stage image assuming the dependencies are present.
      Requires to set the STAGE variable, e.g.:

      task build:image STAGE=base
    label: "build:image STAGE={{.STAGE}}"
    deps:
      - task: build:pkr-conf
        vars: {STAGE: "{{.STAGE}}"}
    cmds:
      - task: clean:image
        vars: {STAGE: "{{.STAGE}}"}
      - packer build {{.CLOUD_PARAM}} "./build/pkr-conf/{{.STAGE}}.pkr.json"
    vars:
      CLOUD_PARAM: "{{if .CLOUD}}-only {{.CLOUD}}.alpine{{end}}"
    sources:
      - "./stage-{{.STAGE}}/{,*/}*"
      - "./build/pkr-conf/{{.STAGE}}.pkr.json"
      - "{{if .PREV_STAGE}}./build/dist/{{.PREV_STAGE}}/{,*/}{{end}}"
    generates:
      - "./build/dist/{{.STAGE}}/{,*/}*"
