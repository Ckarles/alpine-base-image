---
version: '3'

tasks:
  default:
    silent: true
    cmds:
      - task --list

  check:
    desc: lint/fmt source code
    cmds:
      - yamllint .
      - >-
        packer fmt -check -recursive .
        ||(
        echo "please run \"packer fmt -recursive $PWD\"" 1>&2
        && exit 3
        )
      - golangci-lint run

  test:
    desc: trigger all golang tests
    cmds:
      - go test -count 1 -timeout 30m ./...

  clean-stage:
    summary: |
      Remove generated artifacts of a specific stage.
      Requires to set the STAGE variable, e.g.:

      task build-stage STAGE=kickstart
    label: "clean-stage:{{.STAGE}}"
    cmds:
      - rm -rf ./stage-{{.STAGE}}/dist

  build-stage:
    summary: |
      Builds a specific stage assuming the dependencies are ready.
      Requires to set the STAGE variable, e.g.:

      task build-stage STAGE=kickstart
    label: "build-stage:{{.STAGE}}"
    env:
      PKR_VAR_output_dir: "./stage-{{.STAGE}}/dist"
      PKR_VAR_input_dir: "./stage-{{.PREV_STAGE}}/dist"
    cmds:
      - task: clean-stage
        vars: {STAGE: "{{.STAGE}}"}
      - "packer build ./stage-{{.STAGE}}/packer/"
    sources:
      - "./stage-{{.STAGE}}/packer/**"
      - "./stage-{{.STAGE}}/ansible/**"
      - "./stage-{{.PREV_STAGE}}/dist/**"
    generates:
      - "./{{.STAGE}}/dist/**"

  build:
    desc: build the images and the vagrant boxes
    cmds:
      - task: build-stage
        vars:
          STAGE: kickstart
      - task: build-stage
        vars:
          PREV_STAGE: kickstart
          STAGE: vagrant
